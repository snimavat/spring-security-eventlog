buildscript {
  repositories {
    mavenLocal()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://repo.grails.org/grails/core" }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "org.yakworks:gradle-plugins:1.1.3"
  }
}

apply plugin: 'yakworks.shipyak'
apply plugin: 'yakworks.grails-plugin'

repositories {
  mavenLocal()
  maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
  profile "org.grails.profiles:web-plugin"
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.grails:grails-core"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  compile "org.grails:grails-web-boot"
  compile "org.grails:grails-logging"
  compile "org.grails:grails-plugin-rest"
  compile "org.grails:grails-plugin-databinding"
  compile "org.grails:grails-plugin-i18n"
  compile "org.grails:grails-plugin-services"
  compile "org.grails:grails-plugin-url-mappings"
  compile "org.grails:grails-plugin-interceptors"
  compile "org.grails.plugins:cache"

  provided "org.grails:grails-plugin-services"
  provided "org.grails:grails-plugin-domain-class"

  testCompile "org.grails:grails-gorm-testing-support"
  testCompile "org.grails:grails-plugin-testing"
  testCompile "org.grails:grails-web-testing-support"
  testRuntime "org.apache.tomcat:tomcat-jdbc"

  testRuntime "com.h2database:h2"
  compile "org.grails.plugins:hibernate5"
  compile "org.hibernate:hibernate-core:$versionHibernate"
  compile "org.hibernate:hibernate-ehcache:$versionHibernate"

  compile 'org.grails.plugins:spring-security-core:3.2.0'

}

/*
ext.codenarcRuleset = '''
  getRule('CyclomaticComplexity').enabled = false
  getRule('NoWildcardImports').enabled = false
'''
*/

codenarcTest {
  exclude '**/*'
  ignoreFailures = true
}

codenarcIntegrationTest {
  exclude '**/*'
  ignoreFailures = true
}
